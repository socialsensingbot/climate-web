type UserPreferences @model @auth(
  rules: [
    {allow:private, operations:[create]},
    {allow: owner, operations: [create, update, delete, read]},
  ]){
  id: ID!
  ignoreTweets: [TweetIgnore] @connection(name: "UserTweetIgnores")
  ignorePeople: [TwitterUserIgnore] @connection(name: "UserTwitterUserIgnores")
  prefs: AWSJSON
  #  locale: String
  #  timezone: String
  #  multipleSessions: Boolean
  #  sanitizeForGDPR: Boolean
  #  defaultDataSet: String
  #  availableDataSets:[String]
  #  showLoadingMessages: Boolean
}

type UserSession @model(timestamps: {createdAt: "createdAt", updatedAt: "updatedAt" }) @auth(
  rules: [{
    allow: private, operations:[create, read]},
    {allow: owner, operations:[create, update, delete, read]},
  ]){
  id: ID!
  fingerprint: String
  client: AWSJSON
  open: Boolean!
}


type GroupPreferences @model @auth(rules: [{allow:private, operations:[create]}, {allow: groups, operations: [create, update, delete, read], groupsField: "group"}]){
  id: ID!
  group: String!
  #  locale: String
  #  timezone: String
  #  multipleSessions: Boolean
  #  sanitizeForGDPR: Boolean
  #  defaultDataSet: String
  #  availableDataSets:[String]
  #  showLoadingMessages: Boolean
  prefs: AWSJSON
}


type GroupTweetIgnore @model( timestamps: {createdAt: "createdAt", updatedAt: "updatedAt" })  @auth(rules: [{allow: private}]) {
  id: ID!
  url: String!
  ignoredBy: String!
  tweetId: String!
  ownerGroups: [String]
  scope: String!
}

type GroupTwitterUserIgnore @model(timestamps: {createdAt: "createdAt", updatedAt: "updatedAt" })   @auth(rules: [{allow: private}]) {
  id: ID!
  twitterScreenName: String!
  ignoredBy: String!
  ownerGroups: [String]
  scope: String!
}



type TweetIgnore @model @auth(rules: [ {allow: owner}]) {
  id: ID!
  url: String!
  tweetId: String
  user: UserPreferences @connection(name: "UserTweetIgnores")
}


type TwitterUserIgnore @model  @auth(rules: [ {allow: owner}]) {
  id: ID!
  twitterScreenName: String!
  user: UserPreferences @connection(name: "UserTwitterUserIgnores")
}
